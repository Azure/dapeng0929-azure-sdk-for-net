// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace Microsoft.App.DynamicSessions
{
    /// <summary> Model factory for models. </summary>
    public static partial class MicrosoftAppDynamicSessionsModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="DynamicSessions.SessionResourceFile"/>. </summary>
        /// <param name="fileName"> The name of the file. </param>
        /// <param name="sizeInBytes"> The size of the file. </param>
        /// <param name="createdAt"> The date time in RFC3339 format when the file was uploaded. </param>
        /// <param name="lastModifiedAt"> The date time in RFC3339 format when the file was last modified. </param>
        /// <returns> A new <see cref="DynamicSessions.SessionResourceFile"/> instance for mocking. </returns>
        public static SessionResourceFile SessionResourceFile(string fileName = null, long sizeInBytes = default, DateTimeOffset createdAt = default, DateTimeOffset lastModifiedAt = default)
        {
            return new SessionResourceFile(fileName, sizeInBytes, createdAt, lastModifiedAt, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="DynamicSessions.SessionCodeExecutionResponse"/>. </summary>
        /// <param name="id"> Session code execution id. </param>
        /// <param name="status"> The status of the code execution, indicates whether succeeded or not. </param>
        /// <param name="stdout"> The standard output of the code execution. </param>
        /// <param name="stderr"> The standard error of the code execution. </param>
        /// <param name="result"> The result of the code execution. The type of this field is same as the type of actual result of the code execution after being Json serialized. </param>
        /// <param name="executionTimeInMilliseconds"> The execution time of the code in milliseconds. </param>
        /// <returns> A new <see cref="DynamicSessions.SessionCodeExecutionResponse"/> instance for mocking. </returns>
        public static SessionCodeExecutionResponse SessionCodeExecutionResponse(string id = null, CodeExecutionStatus status = default, string stdout = null, string stderr = null, BinaryData result = null, long executionTimeInMilliseconds = default)
        {
            return new SessionCodeExecutionResponse(
                id,
                status,
                stdout,
                stderr,
                result,
                executionTimeInMilliseconds,
                serializedAdditionalRawData: null);
        }
    }
}
