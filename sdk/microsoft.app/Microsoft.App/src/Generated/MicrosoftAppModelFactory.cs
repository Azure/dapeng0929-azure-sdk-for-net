// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace Microsoft.App
{
    /// <summary> Model factory for models. </summary>
    public static partial class MicrosoftAppModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="App.SessionCodeExecutionResult"/>. </summary>
        /// <param name="codeInputType"> The code input type of the code execution request. </param>
        /// <param name="executionType"> The execution type of the code execution request. </param>
        /// <param name="networkStatus"> The network status of the code execution session. </param>
        /// <param name="multiArrayStatus"> The multi array status of the code execution session. </param>
        /// <param name="code"> The string of the code to execute, based on CodeInputType. </param>
        /// <param name="timeoutInSeconds"> Code execution timeout in seconds. </param>
        /// <param name="id"> Session code execution id. </param>
        /// <param name="status"> The status of the code execution, indicates whether succeeded or not. </param>
        /// <param name="stdout"> The standard output of the code execution. </param>
        /// <param name="stderr"> The standard error of the code execution. </param>
        /// <param name="result"> The result of the code execution. </param>
        /// <param name="executionTimeInMilliseconds"> The execution time of the code in milliseconds. </param>
        /// <returns> A new <see cref="App.SessionCodeExecutionResult"/> instance for mocking. </returns>
        public static SessionCodeExecutionResult SessionCodeExecutionResult(CodeInputType codeInputType = default, ExecutionType executionType = default, NetworkStatus networkStatus = default, MultiArrayStatus multiArrayStatus = default, string code = null, long timeoutInSeconds = default, string id = null, CodeExecutionStatus status = default, string stdout = null, string stderr = null, BinaryData result = null, long executionTimeInMilliseconds = default)
        {
            return new SessionCodeExecutionResult(
                codeInputType,
                executionType,
                networkStatus,
                multiArrayStatus,
                code,
                timeoutInSeconds,
                id,
                status,
                stdout,
                stderr,
                result,
                executionTimeInMilliseconds,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="App.SessionResourceFile"/>. </summary>
        /// <param name="fileName"> The name of the file. </param>
        /// <param name="sizeInBytes"> The size of the file. </param>
        /// <param name="createdAt"> The date time in RFC3339 format when the file was uploaded. </param>
        /// <param name="lastModifiedAt"> The date time in RFC3339 format when the file was last modified. </param>
        /// <returns> A new <see cref="App.SessionResourceFile"/> instance for mocking. </returns>
        public static SessionResourceFile SessionResourceFile(string fileName = null, long sizeInBytes = default, DateTimeOffset createdAt = default, DateTimeOffset lastModifiedAt = default)
        {
            return new SessionResourceFile(fileName, sizeInBytes, createdAt, lastModifiedAt, serializedAdditionalRawData: null);
        }
    }
}
