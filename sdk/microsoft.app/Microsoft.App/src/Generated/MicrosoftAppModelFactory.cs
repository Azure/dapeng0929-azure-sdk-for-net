// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace Microsoft.App
{
    /// <summary> Model factory for models. </summary>
    public static partial class MicrosoftAppModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="App.CodeExecutionFile"/>. </summary>
        /// <param name="filename"> The name of the file. </param>
        /// <param name="properties"> Code execution file resource properties. </param>
        /// <returns> A new <see cref="App.CodeExecutionFile"/> instance for mocking. </returns>
        public static CodeExecutionFile CodeExecutionFile(string filename = null, CodeExecutionFileProperties properties = null)
        {
            return new CodeExecutionFile(filename, properties, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="App.CodeExecutionFileProperties"/>. </summary>
        /// <param name="filename"> The name of the file. </param>
        /// <param name="size"> The size of the file. </param>
        /// <param name="lastModifiedTime"> The date time when the file was last modified. </param>
        /// <returns> A new <see cref="App.CodeExecutionFileProperties"/> instance for mocking. </returns>
        public static CodeExecutionFileProperties CodeExecutionFileProperties(string filename = null, long size = default, DateTimeOffset lastModifiedTime = default)
        {
            return new CodeExecutionFileProperties(filename, size, lastModifiedTime, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="App.GetFileMetadataResponse"/>. </summary>
        /// <param name="properties"> Code execution file resource properties. </param>
        /// <returns> A new <see cref="App.GetFileMetadataResponse"/> instance for mocking. </returns>
        public static GetFileMetadataResponse GetFileMetadataResponse(CodeExecutionFileProperties properties = null)
        {
            return new GetFileMetadataResponse(properties, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="App.CodeExecutionFileCollection"/>. </summary>
        /// <param name="value"> The files uploaded. </param>
        /// <returns> A new <see cref="App.CodeExecutionFileCollection"/> instance for mocking. </returns>
        public static CodeExecutionFileCollection CodeExecutionFileCollection(IEnumerable<CodeExecutionFile> value = null)
        {
            value ??= new List<CodeExecutionFile>();

            return new CodeExecutionFileCollection(value?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="App.CodeExecutionResponse"/>. </summary>
        /// <param name="properties"> The properties of the code execution response. </param>
        /// <returns> A new <see cref="App.CodeExecutionResponse"/> instance for mocking. </returns>
        public static CodeExecutionResponse CodeExecutionResponse(CodeExecutionResponseProperties properties = null)
        {
            return new CodeExecutionResponse(properties, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="App.CodeExecutionResponseProperties"/>. </summary>
        /// <param name="status"> The status of the code execution, indicates whether succeeded or not. </param>
        /// <param name="stdout"> The standard output of the code execution. </param>
        /// <param name="stderr"> The standard error of the code execution. </param>
        /// <param name="result"> The result of the code execution. </param>
        /// <param name="executionTimeInMilliseconds"> The execution time of the code in milliseconds. </param>
        /// <returns> A new <see cref="App.CodeExecutionResponseProperties"/> instance for mocking. </returns>
        public static CodeExecutionResponseProperties CodeExecutionResponseProperties(CodeExecutionStatus status = default, string stdout = null, string stderr = null, BinaryData result = null, long executionTimeInMilliseconds = default)
        {
            return new CodeExecutionResponseProperties(
                status,
                stdout,
                stderr,
                result,
                executionTimeInMilliseconds,
                serializedAdditionalRawData: null);
        }
    }
}
