// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Microsoft.App.Samples
{
    public partial class Samples_CodeExecutionFiles
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFile_GetFileMetadata_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = client.GetFileMetadata(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFile_GetFileMetadata_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = await client.GetFileMetadataAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFile_GetFileMetadata_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<GetFileMetadataResponse> response = client.GetFileMetadata(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFile_GetFileMetadata_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<GetFileMetadataResponse> response = await client.GetFileMetadataAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFile_GetFileMetadata_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = client.GetFileMetadata(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFile_GetFileMetadata_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = await client.GetFileMetadataAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFile_GetFileMetadata_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<GetFileMetadataResponse> response = client.GetFileMetadata(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFile_GetFileMetadata_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<GetFileMetadataResponse> response = await client.GetFileMetadataAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFile_DeleteFile_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = client.DeleteFile(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFile_DeleteFile_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = await client.DeleteFileAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFile_DeleteFile_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = client.DeleteFile(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFile_DeleteFile_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = await client.DeleteFileAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFiles_GetFileContent_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = client.GetFileContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFiles_GetFileContent_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = await client.GetFileContentAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFiles_GetFileContent_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<BinaryData> response = client.GetFileContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFiles_GetFileContent_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<BinaryData> response = await client.GetFileContentAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFiles_GetFileContent_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = client.GetFileContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFiles_GetFileContent_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response response = await client.GetFileContentAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFiles_GetFileContent_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<BinaryData> response = client.GetFileContent(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFiles_GetFileContent_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<BinaryData> response = await client.GetFileContentAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFiles_UploadFile_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                file = File.OpenRead("<filePath>"),
            });
            Response response = client.UploadFile(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", content, "multipart/form-data");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("lastModifiedTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFiles_UploadFile_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                file = File.OpenRead("<filePath>"),
            });
            Response response = await client.UploadFileAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", content, "multipart/form-data");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("lastModifiedTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFiles_UploadFile_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<CodeExecutionFileCollection> response = client.UploadFile(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFiles_UploadFile_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<CodeExecutionFileCollection> response = await client.UploadFileAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFiles_UploadFile_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                file = File.OpenRead("<filePath>"),
            });
            Response response = client.UploadFile(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", content, "multipart/form-data");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("lastModifiedTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFiles_UploadFile_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            using RequestContent content = RequestContent.Create(new
            {
                file = File.OpenRead("<filePath>"),
            });
            Response response = await client.UploadFileAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", content, "multipart/form-data");

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("filename").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("lastModifiedTime").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFiles_UploadFile_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<CodeExecutionFileCollection> response = client.UploadFile(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFiles_UploadFile_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            Response<CodeExecutionFileCollection> response = await client.UploadFileAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<filename>", "<identifier>", null);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFile_GetAllFileMetadata_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            foreach (BinaryData item in client.GetAllFileMetadata(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<identifier>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("filename").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("filename").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("size").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedTime").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFile_GetAllFileMetadata_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            await foreach (BinaryData item in client.GetAllFileMetadataAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<identifier>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("filename").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("filename").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("size").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedTime").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFile_GetAllFileMetadata_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            foreach (CodeExecutionFile item in client.GetAllFileMetadata(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<identifier>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFile_GetAllFileMetadata_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            await foreach (CodeExecutionFile item in client.GetAllFileMetadataAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<identifier>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFile_GetAllFileMetadata_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            foreach (BinaryData item in client.GetAllFileMetadata(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<identifier>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("filename").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("filename").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("size").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedTime").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFile_GetAllFileMetadata_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            await foreach (BinaryData item in client.GetAllFileMetadataAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<identifier>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("filename").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("filename").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("size").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedTime").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CodeExecutionFile_GetAllFileMetadata_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            foreach (CodeExecutionFile item in client.GetAllFileMetadata(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<identifier>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CodeExecutionFile_GetAllFileMetadata_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            CodeExecutionFiles client = new AppClient(endpoint, credential).GetCodeExecutionFilesClient(apiVersion: "2023-08-01-preview");

            await foreach (CodeExecutionFile item in client.GetAllFileMetadataAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), "<resourceGroupName>", "<sessionPoolName>", "<identifier>"))
            {
            }
        }
    }
}
