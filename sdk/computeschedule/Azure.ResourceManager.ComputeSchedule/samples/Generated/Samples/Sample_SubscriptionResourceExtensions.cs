// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager.ComputeSchedule.Models;
using Azure.ResourceManager.Resources;

namespace Azure.ResourceManager.ComputeSchedule.Samples
{
    public partial class Sample_SubscriptionResourceExtensions
    {
        // ScheduledActions_VirtualMachinesSubmitDeallocate - generated by [MaximumSet] rule - generated by [MaximumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitDeallocateScheduledAction_ScheduledActionsVirtualMachinesSubmitDeallocateGeneratedByMaximumSetRuleGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesSubmitDeallocate_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitDeallocate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "ibfxsvilwrgqttuslbduzdtxcckdet";
            SubmitDeallocateContent content = new SubmitDeallocateContent(new Schedule(DateTimeOffset.Parse("2024-07-12T18:06:53.361Z"), "zlcujrtgxtgyik", DeadlineType.Unknown), new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 30,
                    RetryWindowInMinutes = 27,
                },
            }, new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource2")
            }), "23519o2f-1dca-4610-afb4-dd25eec1f34");
            DeallocateResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitDeallocateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesSubmitDeallocate - generated by [MaximumSet] rule - generated by [MinimumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitDeallocateScheduledAction_ScheduledActionsVirtualMachinesSubmitDeallocateGeneratedByMaximumSetRuleGeneratedByMinimumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesSubmitDeallocate_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitDeallocate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "qwfcdtmshnlownbkyh";
            SubmitDeallocateContent content = new SubmitDeallocateContent(new Schedule(DateTimeOffset.Parse("2024-07-12T18:06:53.361Z"), "zlcujrtgxtgyik", DeadlineType.Unknown), new ExecutionParameters(), new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource2")
            }), "23519o2f-1dca-4610-afb4-dd25eec1f34");
            DeallocateResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitDeallocateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesSubmitHibernate - generated by [MaximumSet] rule - generated by [MaximumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitHibernateScheduledAction_ScheduledActionsVirtualMachinesSubmitHibernateGeneratedByMaximumSetRuleGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesSubmitHibernate_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitHibernate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "bgxeayimbxqzev";
            SubmitHibernateContent content = new SubmitHibernateContent(new Schedule(DateTimeOffset.Parse("2024-07-12T18:06:53.361Z"), "zlcujrtgxtgyik", DeadlineType.Unknown), new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 30,
                    RetryWindowInMinutes = 27,
                },
            }, new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource3")
            }), "23519o2f-1dca-4610-afb4-dd25eec1f34");
            HibernateResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitHibernateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesSubmitHibernate - generated by [MaximumSet] rule - generated by [MinimumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitHibernateScheduledAction_ScheduledActionsVirtualMachinesSubmitHibernateGeneratedByMaximumSetRuleGeneratedByMinimumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesSubmitHibernate_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitHibernate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "fvjciwudfbndlqumcgqs";
            SubmitHibernateContent content = new SubmitHibernateContent(new Schedule(DateTimeOffset.Parse("2024-07-12T18:06:53.361Z"), "zlcujrtgxtgyik", DeadlineType.Unknown), new ExecutionParameters(), new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource3")
            }), "23519o2f-1dca-4610-afb4-dd25eec1f34");
            HibernateResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitHibernateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesSubmitStart - generated by [MaximumSet] rule - generated by [MaximumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitStartScheduledAction_ScheduledActionsVirtualMachinesSubmitStartGeneratedByMaximumSetRuleGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesSubmitStart_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitStart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "fxiidszhrokwjmewlahfqjiocnes";
            SubmitStartContent content = new SubmitStartContent(new Schedule(DateTimeOffset.Parse("2024-07-12T18:06:53.361Z"), "zlcujrtgxtgyik", DeadlineType.Unknown), new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 30,
                    RetryWindowInMinutes = 27,
                },
            }, new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource4")
            }), "23480d2f-1dca-4610-afb4-dd25eec1f34");
            StartResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitStartScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesSubmitStart - generated by [MaximumSet] rule - generated by [MinimumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesSubmitStartScheduledAction_ScheduledActionsVirtualMachinesSubmitStartGeneratedByMaximumSetRuleGeneratedByMinimumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesSubmitStart_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesSubmitStart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "httzei";
            SubmitStartContent content = new SubmitStartContent(new Schedule(DateTimeOffset.Parse("2024-07-12T18:06:53.361Z"), "zlcujrtgxtgyik", DeadlineType.Unknown), new ExecutionParameters(), new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource4")
            }), "23480d2f-1dca-4610-afb4-dd25eec1f34");
            StartResourceOperationResponse result = await subscriptionResource.VirtualMachinesSubmitStartScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteDeallocate - generated by [MaximumSet] rule - generated by [MaximumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteDeallocateScheduledAction_ScheduledActionsVirtualMachinesExecuteDeallocateGeneratedByMaximumSetRuleGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesExecuteDeallocate_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteDeallocate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "mklyzgztbivwzo";
            ExecuteDeallocateContent content = new ExecuteDeallocateContent(new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 30,
                    RetryWindowInMinutes = 27,
                },
            }, new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource2")
            }), "01080d2f-1dca-4610-afb4-dd25eddf1f3c1");
            DeallocateResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteDeallocateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteDeallocate - generated by [MaximumSet] rule - generated by [MinimumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteDeallocateScheduledAction_ScheduledActionsVirtualMachinesExecuteDeallocateGeneratedByMaximumSetRuleGeneratedByMinimumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesExecuteDeallocate_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteDeallocate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "irbtacrhjgfpyvhvjo";
            ExecuteDeallocateContent content = new ExecuteDeallocateContent(new ExecutionParameters(), new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource2")
            }), "01080d2f-1dca-4610-afb4-dd25eddf1f3c1");
            DeallocateResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteDeallocateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteHibernate - generated by [MaximumSet] rule - generated by [MaximumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteHibernateScheduledAction_ScheduledActionsVirtualMachinesExecuteHibernateGeneratedByMaximumSetRuleGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesExecuteHibernate_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteHibernate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "sejdmamuhhvfpljomwumsplc";
            ExecuteHibernateContent content = new ExecuteHibernateContent(new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 30,
                    RetryWindowInMinutes = 27,
                },
            }, new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource3")
            }), "01080d2f-1dca-4610-afb4-dd25eec1f3c1");
            HibernateResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteHibernateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteHibernate - generated by [MaximumSet] rule - generated by [MinimumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteHibernateScheduledAction_ScheduledActionsVirtualMachinesExecuteHibernateGeneratedByMaximumSetRuleGeneratedByMinimumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesExecuteHibernate_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteHibernate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "kga";
            ExecuteHibernateContent content = new ExecuteHibernateContent(new ExecutionParameters(), new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource3")
            }), "01080d2f-1dca-4610-afb4-dd25eec1f3c1");
            HibernateResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteHibernateScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteStart - generated by [MaximumSet] rule - generated by [MaximumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteStartScheduledAction_ScheduledActionsVirtualMachinesExecuteStartGeneratedByMaximumSetRuleGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesExecuteStart_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteStart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "ysfrwcfmfsh";
            ExecuteStartContent content = new ExecuteStartContent(new ExecutionParameters()
            {
                OptimizationPreference = OptimizationPreference.Cost,
                RetryPolicy = new RetryPolicy()
                {
                    RetryCount = 30,
                    RetryWindowInMinutes = 27,
                },
            }, new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource4")
            }), "23230d2f-1dca-4610-afb4-dd25eec1f34");
            StartResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteStartScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesExecuteStart - generated by [MaximumSet] rule - generated by [MinimumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesExecuteStartScheduledAction_ScheduledActionsVirtualMachinesExecuteStartGeneratedByMaximumSetRuleGeneratedByMinimumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesExecuteStart_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesExecuteStart" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "qegbgjculewswqvnmaclcgpqqidl";
            ExecuteStartContent content = new ExecuteStartContent(new ExecutionParameters(), new Models.Resources(new ResourceIdentifier[]
            {
new ResourceIdentifier("/subscriptions/YourSubscriptionId/resourceGroups/YourResourceGroupName/providers/Microsoft.Compute/virtualMachines/testResource4")
            }), "23230d2f-1dca-4610-afb4-dd25eec1f34");
            StartResourceOperationResponse result = await subscriptionResource.VirtualMachinesExecuteStartScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesGetOperationStatus - generated by [MinimumSet] rule - generated by [MaximumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesGetOperationStatusScheduledAction_ScheduledActionsVirtualMachinesGetOperationStatusGeneratedByMinimumSetRuleGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesGetOperationStatus_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesGetOperationStatus" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "htxxasfxaesuecem";
            GetOperationStatusContent content = new GetOperationStatusContent(new string[]
            {
"01080d2f-1dca-4610-afb4-dd25eec1f3df"
            }, "01080d2f-1dca-4610-afb4-dd25eec1f3c1");
            GetOperationStatusResponse result = await subscriptionResource.VirtualMachinesGetOperationStatusScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesGetOperationStatus - generated by [MinimumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesGetOperationStatusScheduledAction_ScheduledActionsVirtualMachinesGetOperationStatusGeneratedByMinimumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesGetOperationStatus_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesGetOperationStatus" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "csay";
            GetOperationStatusContent content = new GetOperationStatusContent(new string[]
            {
"01080d2f-1dca-4610-afb4-dd25eec1f3df"
            }, "01080d2f-1dca-4610-afb4-dd25eec1f3c1");
            GetOperationStatusResponse result = await subscriptionResource.VirtualMachinesGetOperationStatusScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesCancelOperations - generated by [MaximumSet] rule - generated by [MaximumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesCancelOperationsScheduledAction_ScheduledActionsVirtualMachinesCancelOperationsGeneratedByMaximumSetRuleGeneratedByMaximumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesCancelOperations_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesCancelOperations" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "tdxypnse";
            CancelOperationsContent content = new CancelOperationsContent(new string[]
            {
"23480d2f-1dca-4610-afb4-dd25eec1f34r"
            }, "01080d2f-1dca-4610-afb4-dd25eec1f3c1");
            CancelOperationsResponse result = await subscriptionResource.VirtualMachinesCancelOperationsScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // ScheduledActions_VirtualMachinesCancelOperations - generated by [MaximumSet] rule - generated by [MinimumSet] rule
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesCancelOperationsScheduledAction_ScheduledActionsVirtualMachinesCancelOperationsGeneratedByMaximumSetRuleGeneratedByMinimumSetRule()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesCancelOperations_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesCancelOperations" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "lwapkjsbltcqp";
            CancelOperationsContent content = new CancelOperationsContent(new string[]
            {
"23480d2f-1dca-4610-afb4-dd25eec1f34r"
            }, "01080d2f-1dca-4610-afb4-dd25eec1f3c1");
            CancelOperationsResponse result = await subscriptionResource.VirtualMachinesCancelOperationsScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // CS_ScheduledActions_VirtualMachinesGetOperationErrors_Max
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesGetOperationErrorsScheduledAction_CSScheduledActionsVirtualMachinesGetOperationErrorsMax()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesGetOperationErrors_MaximumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesGetOperationErrors" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "hfsa";
            GetOperationErrorsContent content = new GetOperationErrorsContent(new string[]
            {
"DE84A209-5715-43E7-BC76-3E208A9A323"
            });
            GetOperationErrorsResponse result = await subscriptionResource.VirtualMachinesGetOperationErrorsScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }

        // CS_ScheduledActions_VirtualMachinesGetOperationErrors_Min
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task VirtualMachinesGetOperationErrorsScheduledAction_CSScheduledActionsVirtualMachinesGetOperationErrorsMin()
        {
            // Generated from example definition: 2024-08-15-preview/ScheduledActions_VirtualMachinesGetOperationErrors_MinimumSet_Gen.json
            // this example is just showing the usage of "ScheduledActions_VirtualMachinesGetOperationErrors" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this SubscriptionResource created on azure
            // for more information of creating SubscriptionResource, please refer to the document of SubscriptionResource
            string subscriptionId = "DE84A209-5715-43E7-BC76-3E208A9A82C5";
            ResourceIdentifier subscriptionResourceId = SubscriptionResource.CreateResourceIdentifier(subscriptionId);
            SubscriptionResource subscriptionResource = client.GetSubscriptionResource(subscriptionResourceId);

            // invoke the operation
            string locationparameter = "ggxoaxzxtdbi";
            GetOperationErrorsContent content = new GetOperationErrorsContent(new string[]
            {
"qeicik"
            });
            GetOperationErrorsResponse result = await subscriptionResource.VirtualMachinesGetOperationErrorsScheduledActionAsync(locationparameter, content);

            Console.WriteLine($"Succeeded: {result}");
        }
    }
}
