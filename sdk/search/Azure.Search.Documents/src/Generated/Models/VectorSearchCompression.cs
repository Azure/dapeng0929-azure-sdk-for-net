// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Search.Documents.Indexes.Models
{
    /// <summary>
    /// Contains configuration options specific to the compression method used during indexing or querying.
    /// Please note <see cref="VectorSearchCompression"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="BinaryQuantizationCompression"/> and <see cref="ScalarQuantizationCompression"/>.
    /// </summary>
    public abstract partial class VectorSearchCompression
    {
        /// <summary> Initializes a new instance of <see cref="VectorSearchCompression"/>. </summary>
        /// <param name="compressionName"> The name to associate with this particular configuration. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="compressionName"/> is null. </exception>
        protected VectorSearchCompression(string compressionName)
        {
            Argument.AssertNotNull(compressionName, nameof(compressionName));

            CompressionName = compressionName;
        }

        /// <summary> Initializes a new instance of <see cref="VectorSearchCompression"/>. </summary>
        /// <param name="compressionName"> The name to associate with this particular configuration. </param>
        /// <param name="kind"> The name of the kind of compression method being configured for use with vector search. </param>
        /// <param name="rescoringOptions"> Contains the options for rescoring. </param>
        /// <param name="truncationDimension"> The number of dimensions to truncate the vectors to. Truncating the vectors reduces the size of the vectors and the amount of data that needs to be transferred during search. This can save storage cost and improve search performance at the expense of recall. It should be only used for embeddings trained with Matryoshka Representation Learning (MRL) such as OpenAI text-embedding-3-large (small). The default value is null, which means no truncation. </param>
        internal VectorSearchCompression(string compressionName, VectorSearchCompressionKind kind, RescoringOptions rescoringOptions, int? truncationDimension)
        {
            CompressionName = compressionName;
            Kind = kind;
            RescoringOptions = rescoringOptions;
            TruncationDimension = truncationDimension;
        }
        /// <summary> The name of the kind of compression method being configured for use with vector search. </summary>
        internal VectorSearchCompressionKind Kind { get; set; }
        /// <summary> Contains the options for rescoring. </summary>
        public RescoringOptions RescoringOptions { get; set; }
        /// <summary> The number of dimensions to truncate the vectors to. Truncating the vectors reduces the size of the vectors and the amount of data that needs to be transferred during search. This can save storage cost and improve search performance at the expense of recall. It should be only used for embeddings trained with Matryoshka Representation Learning (MRL) such as OpenAI text-embedding-3-large (small). The default value is null, which means no truncation. </summary>
        public int? TruncationDimension { get; set; }
    }
}
