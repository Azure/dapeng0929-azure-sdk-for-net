// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.StreamAnalytics.Models
{
    /// <summary> Describes a Reflex output data source. </summary>
    public partial class ReflexOutputDataSource : StreamingJobOutputDataSource
    {
        /// <summary> Initializes a new instance of <see cref="ReflexOutputDataSource"/>. </summary>
        public ReflexOutputDataSource()
        {
            OutputDataSourceType = "Reflex";
        }

        /// <summary> Initializes a new instance of <see cref="ReflexOutputDataSource"/>. </summary>
        /// <param name="outputDataSourceType"> Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="refreshToken"> A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests. </param>
        /// <param name="tokenUserPrincipalName"> The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token. </param>
        /// <param name="tokenUserDisplayName"> The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token. </param>
        /// <param name="aegSubscriptionName"> Unique ASA query ID. For EventGrid it's an unique subscription name, set internally by EventGrid on subscription creation. </param>
        /// <param name="fabricEsName"> Public EG populates aeg-subscription-name with the subscription name set by the subscription creator. This header was added, because Fabric EG didn't populate aeg-subscription-name with our set value, but EG internal value. The EG subscription name set by us during creation gets populated to fabris-es-name. There is no additional validation to ensure the existence of the subscription, so both aeg-subscription-name and fabris-es-name can be set to any ID that best represents the ASA query subscription. </param>
        /// <param name="webhookUri"> Webhook URL Format: https://{RegionCode}.data.activator.pipe.{WebhookEnvironment}.aria.trafficmanager.net/api/v2/OneRiv er/PushEvents/{tenantId}/{sourceType}/{eventName}. </param>
        internal ReflexOutputDataSource(string outputDataSourceType, IDictionary<string, BinaryData> serializedAdditionalRawData, string refreshToken, string tokenUserPrincipalName, string tokenUserDisplayName, string aegSubscriptionName, string fabricEsName, Uri webhookUri) : base(outputDataSourceType, serializedAdditionalRawData)
        {
            RefreshToken = refreshToken;
            TokenUserPrincipalName = tokenUserPrincipalName;
            TokenUserDisplayName = tokenUserDisplayName;
            AegSubscriptionName = aegSubscriptionName;
            FabricEsName = fabricEsName;
            WebhookUri = webhookUri;
            OutputDataSourceType = outputDataSourceType ?? "Reflex";
        }

        /// <summary> A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests. </summary>
        public string RefreshToken { get; set; }
        /// <summary> The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token. </summary>
        public string TokenUserPrincipalName { get; set; }
        /// <summary> The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token. </summary>
        public string TokenUserDisplayName { get; set; }
        /// <summary> Unique ASA query ID. For EventGrid it's an unique subscription name, set internally by EventGrid on subscription creation. </summary>
        public string AegSubscriptionName { get; set; }
        /// <summary> Public EG populates aeg-subscription-name with the subscription name set by the subscription creator. This header was added, because Fabric EG didn't populate aeg-subscription-name with our set value, but EG internal value. The EG subscription name set by us during creation gets populated to fabris-es-name. There is no additional validation to ensure the existence of the subscription, so both aeg-subscription-name and fabris-es-name can be set to any ID that best represents the ASA query subscription. </summary>
        public string FabricEsName { get; set; }
        /// <summary> Webhook URL Format: https://{RegionCode}.data.activator.pipe.{WebhookEnvironment}.aria.trafficmanager.net/api/v2/OneRiv er/PushEvents/{tenantId}/{sourceType}/{eventName}. </summary>
        public Uri WebhookUri { get; set; }
    }
}
